//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class GrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, T__67=68, T__68=69, T__69=70, T__70=71, T__71=72, T__72=73, 
		T__73=74, T__74=75, T__75=76, T__76=77, T__77=78, T__78=79, T__79=80, 
		T__80=81, T__81=82, T__82=83, T__83=84, T__84=85, T__85=86, T__86=87, 
		T__87=88, T__88=89, NUMBERDCL=90, TEXTDCL=91, BOOLEANDCL=92, ASSIGN=93, 
		Comment=94, WS=95;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
		"T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
		"T__73", "T__74", "T__75", "T__76", "T__77", "T__78", "T__79", "T__80", 
		"T__81", "T__82", "T__83", "T__84", "T__85", "T__86", "T__87", "T__88", 
		"NUMBERDCL", "TEXTDCL", "BOOLEANDCL", "ASSIGN", "Comment", "WS"
	};


	public GrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public GrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'sum'", "'('", "':'", "')'", "'average'", "'min'", "'max'", "'count'", 
		"'if'", "'then'", "'else'", "'endif'", "'while'", "'do'", "'endwhile'", 
		"'\"'", "'0'", "'1'", "'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", 
		"'9'", "'+'", "'-'", "'*'", "'/'", "'<'", "'>'", "'<='", "'>='", "'!='", 
		"'false'", "'true'", "'A'", "'B'", "'C'", "'D'", "'E'", "'F'", "'G'", 
		"'H'", "'I'", "'J'", "'K'", "'L'", "'M'", "'N'", "'O'", "'P'", "'Q'", 
		"'R'", "'S'", "'T'", "'U'", "'V'", "'W'", "'X'", "'Y'", "'Z'", "'a'", 
		"'b'", "'c'", "'d'", "'e'", "'f'", "'g'", "'h'", "'i'", "'j'", "'k'", 
		"'l'", "'m'", "'n'", "'o'", "'p'", "'q'", "'r'", "'s'", "'t'", "'u'", 
		"'v'", "'w'", "'x'", "'y'", "'z'", "'number'", "'text'", "'bool'", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "NUMBERDCL", "TEXTDCL", "BOOLEANDCL", 
		"ASSIGN", "Comment", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Grammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static GrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,95,458,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,
		1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,
		7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,
		10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,
		13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,
		16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,
		23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,
		30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,
		35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,
		39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,
		46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,
		53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,
		60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,
		67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,
		74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,
		81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,87,1,87,1,
		88,1,88,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,
		91,1,91,1,91,1,91,1,91,1,92,1,92,1,93,1,93,1,93,1,93,5,93,442,8,93,10,
		93,12,93,445,9,93,1,93,1,93,1,93,1,93,1,93,1,94,4,94,453,8,94,11,94,12,
		94,454,1,94,1,94,1,443,0,95,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
		10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
		22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
		34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
		46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
		57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,
		67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,
		77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,
		87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,1,0,1,3,0,9,
		10,13,13,32,32,459,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
		1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
		0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
		1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
		0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
		1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
		0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
		1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
		0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
		1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
		0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
		0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,
		0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,
		0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,
		0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,
		0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,
		0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,
		0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,
		0,0,0,0,189,1,0,0,0,1,191,1,0,0,0,3,195,1,0,0,0,5,197,1,0,0,0,7,199,1,
		0,0,0,9,201,1,0,0,0,11,209,1,0,0,0,13,213,1,0,0,0,15,217,1,0,0,0,17,223,
		1,0,0,0,19,226,1,0,0,0,21,231,1,0,0,0,23,236,1,0,0,0,25,242,1,0,0,0,27,
		248,1,0,0,0,29,251,1,0,0,0,31,260,1,0,0,0,33,262,1,0,0,0,35,264,1,0,0,
		0,37,266,1,0,0,0,39,268,1,0,0,0,41,270,1,0,0,0,43,272,1,0,0,0,45,274,1,
		0,0,0,47,276,1,0,0,0,49,278,1,0,0,0,51,280,1,0,0,0,53,282,1,0,0,0,55,284,
		1,0,0,0,57,286,1,0,0,0,59,288,1,0,0,0,61,290,1,0,0,0,63,292,1,0,0,0,65,
		294,1,0,0,0,67,297,1,0,0,0,69,300,1,0,0,0,71,303,1,0,0,0,73,309,1,0,0,
		0,75,314,1,0,0,0,77,316,1,0,0,0,79,318,1,0,0,0,81,320,1,0,0,0,83,322,1,
		0,0,0,85,324,1,0,0,0,87,326,1,0,0,0,89,328,1,0,0,0,91,330,1,0,0,0,93,332,
		1,0,0,0,95,334,1,0,0,0,97,336,1,0,0,0,99,338,1,0,0,0,101,340,1,0,0,0,103,
		342,1,0,0,0,105,344,1,0,0,0,107,346,1,0,0,0,109,348,1,0,0,0,111,350,1,
		0,0,0,113,352,1,0,0,0,115,354,1,0,0,0,117,356,1,0,0,0,119,358,1,0,0,0,
		121,360,1,0,0,0,123,362,1,0,0,0,125,364,1,0,0,0,127,366,1,0,0,0,129,368,
		1,0,0,0,131,370,1,0,0,0,133,372,1,0,0,0,135,374,1,0,0,0,137,376,1,0,0,
		0,139,378,1,0,0,0,141,380,1,0,0,0,143,382,1,0,0,0,145,384,1,0,0,0,147,
		386,1,0,0,0,149,388,1,0,0,0,151,390,1,0,0,0,153,392,1,0,0,0,155,394,1,
		0,0,0,157,396,1,0,0,0,159,398,1,0,0,0,161,400,1,0,0,0,163,402,1,0,0,0,
		165,404,1,0,0,0,167,406,1,0,0,0,169,408,1,0,0,0,171,410,1,0,0,0,173,412,
		1,0,0,0,175,414,1,0,0,0,177,416,1,0,0,0,179,418,1,0,0,0,181,425,1,0,0,
		0,183,430,1,0,0,0,185,435,1,0,0,0,187,437,1,0,0,0,189,452,1,0,0,0,191,
		192,5,115,0,0,192,193,5,117,0,0,193,194,5,109,0,0,194,2,1,0,0,0,195,196,
		5,40,0,0,196,4,1,0,0,0,197,198,5,58,0,0,198,6,1,0,0,0,199,200,5,41,0,0,
		200,8,1,0,0,0,201,202,5,97,0,0,202,203,5,118,0,0,203,204,5,101,0,0,204,
		205,5,114,0,0,205,206,5,97,0,0,206,207,5,103,0,0,207,208,5,101,0,0,208,
		10,1,0,0,0,209,210,5,109,0,0,210,211,5,105,0,0,211,212,5,110,0,0,212,12,
		1,0,0,0,213,214,5,109,0,0,214,215,5,97,0,0,215,216,5,120,0,0,216,14,1,
		0,0,0,217,218,5,99,0,0,218,219,5,111,0,0,219,220,5,117,0,0,220,221,5,110,
		0,0,221,222,5,116,0,0,222,16,1,0,0,0,223,224,5,105,0,0,224,225,5,102,0,
		0,225,18,1,0,0,0,226,227,5,116,0,0,227,228,5,104,0,0,228,229,5,101,0,0,
		229,230,5,110,0,0,230,20,1,0,0,0,231,232,5,101,0,0,232,233,5,108,0,0,233,
		234,5,115,0,0,234,235,5,101,0,0,235,22,1,0,0,0,236,237,5,101,0,0,237,238,
		5,110,0,0,238,239,5,100,0,0,239,240,5,105,0,0,240,241,5,102,0,0,241,24,
		1,0,0,0,242,243,5,119,0,0,243,244,5,104,0,0,244,245,5,105,0,0,245,246,
		5,108,0,0,246,247,5,101,0,0,247,26,1,0,0,0,248,249,5,100,0,0,249,250,5,
		111,0,0,250,28,1,0,0,0,251,252,5,101,0,0,252,253,5,110,0,0,253,254,5,100,
		0,0,254,255,5,119,0,0,255,256,5,104,0,0,256,257,5,105,0,0,257,258,5,108,
		0,0,258,259,5,101,0,0,259,30,1,0,0,0,260,261,5,34,0,0,261,32,1,0,0,0,262,
		263,5,48,0,0,263,34,1,0,0,0,264,265,5,49,0,0,265,36,1,0,0,0,266,267,5,
		50,0,0,267,38,1,0,0,0,268,269,5,51,0,0,269,40,1,0,0,0,270,271,5,52,0,0,
		271,42,1,0,0,0,272,273,5,53,0,0,273,44,1,0,0,0,274,275,5,54,0,0,275,46,
		1,0,0,0,276,277,5,55,0,0,277,48,1,0,0,0,278,279,5,56,0,0,279,50,1,0,0,
		0,280,281,5,57,0,0,281,52,1,0,0,0,282,283,5,43,0,0,283,54,1,0,0,0,284,
		285,5,45,0,0,285,56,1,0,0,0,286,287,5,42,0,0,287,58,1,0,0,0,288,289,5,
		47,0,0,289,60,1,0,0,0,290,291,5,60,0,0,291,62,1,0,0,0,292,293,5,62,0,0,
		293,64,1,0,0,0,294,295,5,60,0,0,295,296,5,61,0,0,296,66,1,0,0,0,297,298,
		5,62,0,0,298,299,5,61,0,0,299,68,1,0,0,0,300,301,5,33,0,0,301,302,5,61,
		0,0,302,70,1,0,0,0,303,304,5,102,0,0,304,305,5,97,0,0,305,306,5,108,0,
		0,306,307,5,115,0,0,307,308,5,101,0,0,308,72,1,0,0,0,309,310,5,116,0,0,
		310,311,5,114,0,0,311,312,5,117,0,0,312,313,5,101,0,0,313,74,1,0,0,0,314,
		315,5,65,0,0,315,76,1,0,0,0,316,317,5,66,0,0,317,78,1,0,0,0,318,319,5,
		67,0,0,319,80,1,0,0,0,320,321,5,68,0,0,321,82,1,0,0,0,322,323,5,69,0,0,
		323,84,1,0,0,0,324,325,5,70,0,0,325,86,1,0,0,0,326,327,5,71,0,0,327,88,
		1,0,0,0,328,329,5,72,0,0,329,90,1,0,0,0,330,331,5,73,0,0,331,92,1,0,0,
		0,332,333,5,74,0,0,333,94,1,0,0,0,334,335,5,75,0,0,335,96,1,0,0,0,336,
		337,5,76,0,0,337,98,1,0,0,0,338,339,5,77,0,0,339,100,1,0,0,0,340,341,5,
		78,0,0,341,102,1,0,0,0,342,343,5,79,0,0,343,104,1,0,0,0,344,345,5,80,0,
		0,345,106,1,0,0,0,346,347,5,81,0,0,347,108,1,0,0,0,348,349,5,82,0,0,349,
		110,1,0,0,0,350,351,5,83,0,0,351,112,1,0,0,0,352,353,5,84,0,0,353,114,
		1,0,0,0,354,355,5,85,0,0,355,116,1,0,0,0,356,357,5,86,0,0,357,118,1,0,
		0,0,358,359,5,87,0,0,359,120,1,0,0,0,360,361,5,88,0,0,361,122,1,0,0,0,
		362,363,5,89,0,0,363,124,1,0,0,0,364,365,5,90,0,0,365,126,1,0,0,0,366,
		367,5,97,0,0,367,128,1,0,0,0,368,369,5,98,0,0,369,130,1,0,0,0,370,371,
		5,99,0,0,371,132,1,0,0,0,372,373,5,100,0,0,373,134,1,0,0,0,374,375,5,101,
		0,0,375,136,1,0,0,0,376,377,5,102,0,0,377,138,1,0,0,0,378,379,5,103,0,
		0,379,140,1,0,0,0,380,381,5,104,0,0,381,142,1,0,0,0,382,383,5,105,0,0,
		383,144,1,0,0,0,384,385,5,106,0,0,385,146,1,0,0,0,386,387,5,107,0,0,387,
		148,1,0,0,0,388,389,5,108,0,0,389,150,1,0,0,0,390,391,5,109,0,0,391,152,
		1,0,0,0,392,393,5,110,0,0,393,154,1,0,0,0,394,395,5,111,0,0,395,156,1,
		0,0,0,396,397,5,112,0,0,397,158,1,0,0,0,398,399,5,113,0,0,399,160,1,0,
		0,0,400,401,5,114,0,0,401,162,1,0,0,0,402,403,5,115,0,0,403,164,1,0,0,
		0,404,405,5,116,0,0,405,166,1,0,0,0,406,407,5,117,0,0,407,168,1,0,0,0,
		408,409,5,118,0,0,409,170,1,0,0,0,410,411,5,119,0,0,411,172,1,0,0,0,412,
		413,5,120,0,0,413,174,1,0,0,0,414,415,5,121,0,0,415,176,1,0,0,0,416,417,
		5,122,0,0,417,178,1,0,0,0,418,419,5,110,0,0,419,420,5,117,0,0,420,421,
		5,109,0,0,421,422,5,98,0,0,422,423,5,101,0,0,423,424,5,114,0,0,424,180,
		1,0,0,0,425,426,5,116,0,0,426,427,5,101,0,0,427,428,5,120,0,0,428,429,
		5,116,0,0,429,182,1,0,0,0,430,431,5,98,0,0,431,432,5,111,0,0,432,433,5,
		111,0,0,433,434,5,108,0,0,434,184,1,0,0,0,435,436,5,61,0,0,436,186,1,0,
		0,0,437,438,5,47,0,0,438,439,5,42,0,0,439,443,1,0,0,0,440,442,9,0,0,0,
		441,440,1,0,0,0,442,445,1,0,0,0,443,444,1,0,0,0,443,441,1,0,0,0,444,446,
		1,0,0,0,445,443,1,0,0,0,446,447,5,42,0,0,447,448,5,47,0,0,448,449,1,0,
		0,0,449,450,6,93,0,0,450,188,1,0,0,0,451,453,7,0,0,0,452,451,1,0,0,0,453,
		454,1,0,0,0,454,452,1,0,0,0,454,455,1,0,0,0,455,456,1,0,0,0,456,457,6,
		94,1,0,457,190,1,0,0,0,3,0,443,454,2,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
